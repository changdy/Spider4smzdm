<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smzdm.mapper.CommodityMapper">
    <resultMap id="BaseResultMap" type="com.smzdm.model.Commodity">
        <constructor>
            <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="article_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="discovery_flag" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="content" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="tags" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="info_title" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="brand" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="price_string" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="price_number" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="top_category_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="categories" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="referral_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="pic_url" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="info_url" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="channel_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="mall" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="mall_url" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="shopping_url" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="referral_date" jdbcType="TIMESTAMP" javaType="java.time.LocalDateTime"/>
            <arg column="time_sort" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="create_date" jdbcType="TIMESTAMP" javaType="java.time.LocalDateTime"/>
        </constructor>
    </resultMap>
    <insert id="insert" parameterType="com.smzdm.model.Commodity">
    insert into commodity (id, article_id, discovery_flag, title, content,
      tags, info_title, brand, 
      price_string, price_number, top_category_id,categories,referral_name,
      pic_url, info_url, channel_id, 
      mall, mall_url, shopping_url, 
      referral_date, time_sort, create_date)
    values (#{id,jdbcType=BIGINT}, #{articleId,jdbcType=BIGINT}, #{discoveryFlag,jdbcType=INTEGER},#{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
      #{tags,jdbcType=VARCHAR}, #{infoTitle,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, 
      #{priceString,jdbcType=VARCHAR}, #{priceNumber,jdbcType=BIGINT}, #{topCategoryId,jdbcType=INTEGER}, #{categories,jdbcType=VARCHAR},#{referralName,jdbcType=VARCHAR},
      #{picUrl,jdbcType=VARCHAR}, #{infoUrl,jdbcType=VARCHAR}, #{channelId,jdbcType=INTEGER}, 
      #{mall,jdbcType=VARCHAR}, #{mallUrl,jdbcType=VARCHAR}, #{shoppingUrl,jdbcType=VARCHAR}, 
      #{referralDate,jdbcType=TIMESTAMP}, #{timeSort,jdbcType=BIGINT},#{createDate,jdbcType=TIMESTAMP})
  </insert>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select id, article_id, discovery_flag, title, content, tags, info_title, brand, price_string, price_number, top_category_id,categories,referral_name,
    pic_url, info_url, channel_id, mall, mall_url, shopping_url, referral_date, time_sort,create_date
    from commodity
    where id = #{id,jdbcType=BIGINT}
  </select>

    <insert id="insertList" parameterType="list">
        insert into commodity (id, article_id, discovery_flag, title, content,
        tags, info_title, brand,
        price_string, price_number, top_category_id,categories,referral_name,
        pic_url, info_url, channel_id,
        mall, mall_url, shopping_url,
        referral_date, time_sort,create_date)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id,jdbcType=BIGINT}, #{item.articleId,jdbcType=BIGINT}, #{item.discoveryFlag,jdbcType=INTEGER}, #{item.title,jdbcType=VARCHAR},
            #{item.content,jdbcType=VARCHAR}, #{item.tags,jdbcType=VARCHAR}, #{item.infoTitle,jdbcType=VARCHAR}, #{item.brand,jdbcType=VARCHAR},
            #{item.priceString,jdbcType=VARCHAR},
            #{item.priceNumber,jdbcType=BIGINT},#{item.topCategoryId,jdbcType=INTEGER},#{item.categories,jdbcType=VARCHAR},
            #{item.referralName,jdbcType=VARCHAR}, #{item.picUrl,jdbcType=VARCHAR}, #{item.infoUrl,jdbcType=VARCHAR}, #{item.channelId,jdbcType=INTEGER},
            #{item.mall,jdbcType=VARCHAR}, #{item.mallUrl,jdbcType=VARCHAR}, #{item.shoppingUrl,jdbcType=VARCHAR}, #{item.referralDate,jdbcType=TIMESTAMP},
            #{item.timeSort,jdbcType=BIGINT},#{item.createDate,jdbcType=TIMESTAMP})
        </foreach>
    </insert>

    <select id="queryList" parameterType="com.smzdm.model.CommodityParams" resultType="Map">
        SELECT
        a.id,
        a.mall,
        a.tags,
        a.title,
        a.content,
        a.categories,
        a.pic_url picUrl,
        b.title category ,
        a.time_sort timeSort,
        ch.title channelTitle,
        a.article_id articleId,
        a.shopping_url shoppingUrl,
        a.referral_date referralDate,
        a.price_string priceString,
        CONCAT_WS('/',info.worthy,info.unworthy,info.comment,info.collection) commentInfo,
        info.worthy,info.unworthy,info.comment,info.collection
        FROM commodity_last_info info,channel ch,
        (select * from commodity
        <if test="search!=null and search!=''">
            where title LIKE CONCAT('%', #{search, jdbcType=VARCHAR},'%')
        </if>
        order by id desc
        <choose>
            <when test="offset!=null and limit!=null">limit #{offset},#{limit}</when>
            <otherwise>limit 25</otherwise>
        </choose>
        ) a ,category b WHERE info.article_id = a.article_id AND a.top_category_id = b.id AND ch.id = a.channel_id
    </select>
    <select id="getCommodityCount" parameterType="com.smzdm.model.CommodityParams" resultType="int">
        SELECT COUNT(*) FROM commodity
        <where>
            <if test="search!=null and search!=''">
                title LIKE CONCAT('%', #{search, jdbcType=VARCHAR},'%')
            </if>
        </where>
    </select>
    <delete id="deleteDupl" parameterType="java.time.LocalDateTime">
DELETE FROM smzdm_commodity.commodity WHERE  article_id IN
(SELECT * FROM (select article_id from smzdm_commodity.commodity  where create_date >#{time} GROUP BY article_id HAVING  count(article_id)>1) as temp) and discovery_flag =1
</delete>


    <sql id="query-commodity">
        SELECT
            id,
            mall,
            tags,
            title,
            content,
            categories,
            pic_url AS picUrl,
            article_id AS articleId,
            shopping_url AS shoppingUrl,
            referral_date AS referralDate,
            channel_id as channelId,
            price_string AS priceString
        FROM commodity
        <where>
            <if test="type!=null and type!= -1">
                AND discovery_flag = #{type, jdbcType=VARCHAR}
            </if>
            <if test="startTime!=null and startTime !=''">
                AND date_format(referral_date, '%Y-%m-%d') >= #{startTime, jdbcType=VARCHAR}
            </if>
            <if test="endTime!=null and endTime !=''">
                AND #{endTime, jdbcType=VARCHAR} >= date_format(referral_date, '%Y-%m-%d')
            </if>
            <foreach collection="titleMatch" item="item" open="AND" separator="AND">
                title LIKE CONCAT('%', #{item, jdbcType=VARCHAR},'%')
            </foreach>
            <foreach collection="titleUnmatch" item="item" open="AND" separator="AND">
                title NOT LIKE CONCAT('%', #{item, jdbcType=VARCHAR},'%')
            </foreach>
            <foreach collection="categoryUnmatchTitle" item="item" open="AND" separator="AND">
                categories NOT LIKE CONCAT('%', #{item, jdbcType=VARCHAR},'%')
            </foreach>
            <foreach collection="categoryMatchTitle" item="item" open="AND (" separator="OR" close=")">
                categories LIKE CONCAT('%', #{item, jdbcType=VARCHAR},'%')
            </foreach>
        </where>
        <if test="sort!=null and sort=='time'">
            ORDER BY id DESC
            <choose>
                <when test="offset!=null and limit!=null">limit #{offset},#{limit}</when>
                <otherwise>limit 25</otherwise>
            </choose>
        </if>
    </sql>

    <sql id="commodity-info">
        SELECT commodity.*,info.worthy,info.unworthy,info.comment,info.collection
        <if test="(ratingCount !=null and ratingCount !=0) or (sort!=null and sort=='hot')">
            ,info.collection+info.worthy+info.comment AS ratingCount
        </if>
        FROM (<include refid="query-commodity"/>) AS commodity,commodity_last_info AS info WHERE info.article_id = commodity.articleId
        <if test="ratingCount!=null and ratingCount !=0">
            HAVING ratingCount> #{ratingCount, jdbcType=INTEGER}
        </if>
        <if test="sort!=null and sort=='hot'">
            ORDER BY ratingCount DESC
            <choose>
                <when test="offset!=null and limit!=null">limit #{offset},#{limit}</when>
                <otherwise>limit 25</otherwise>
            </choose>
        </if>
    </sql>


    <select id="queryListInfo" parameterType="com.smzdm.model.CommoditySearch" resultType="Map">
        SELECT ch.title channelTitle , commodityInfo.* FROM  (<include refid="commodity-info"/>) AS commodityInfo,channel ch WHERE ch.id = commodityInfo.channelId;
    </select>

    <select id="getListCount" parameterType="com.smzdm.model.CommoditySearch" resultType="java.lang.Integer">
        SELECT count(*) FROM  (<include refid="commodity-info"/>) AS commodityInfo
    </select>
</mapper>