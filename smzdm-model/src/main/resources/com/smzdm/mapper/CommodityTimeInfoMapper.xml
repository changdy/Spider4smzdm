<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smzdm.mapper.CommodityTimeInfoMapper" >
  <resultMap id="BaseResultMap" type="com.smzdm.model.CommodityTimeInfo" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="commodity_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="comment" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="collection" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="worthy" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="unworthy" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sold_out" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="timeout" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <insert id="insert" parameterType="com.smzdm.model.CommodityTimeInfo" >
    insert into commodity_time_info (id, commodity_id, comment, 
      collection, worthy, unworthy, 
      sold_out, timeout, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{commodityId,jdbcType=BIGINT}, #{comment,jdbcType=INTEGER}, 
      #{collection,jdbcType=INTEGER}, #{worthy,jdbcType=INTEGER}, #{unworthy,jdbcType=INTEGER}, 
      #{soldOut,jdbcType=INTEGER}, #{timeout,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, commodity_id, comment, collection, worthy, unworthy, sold_out, timeout, 
    update_time
    from commodity_time_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, commodity_id, comment, collection, worthy, unworthy, sold_out, timeout, 
    update_time
    from commodity_time_info
  </select>

  <insert id="insertList" parameterType="list">
    insert into commodity_time_info (id, commodity_id, comment,collection, worthy, unworthy,sold_out, timeout, update_time) values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.commodityId,jdbcType=BIGINT},#{item.comment,jdbcType=INTEGER},#{item.collection,jdbcType=INTEGER},#{item.worthy,jdbcType=INTEGER},#{item.unworthy,jdbcType=INTEGER},#{item.soldOut,jdbcType=INTEGER},#{item.timeout,jdbcType=INTEGER},#{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>

  <select id="getLastComment" resultType="java.lang.String">
    SELECT CONCAT_WS('/',worthy,unworthy,comment) from commodity_time_info WHERE commodity_id = #{commodityId}
      <if test="discoveryFlag !=null and discoveryFlag == false">
        AND unworthy != -1
      </if>
    order by update_time desc limit 1;
  </select>

</mapper>