<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smzdm.mapper.RelationMapper" >
  <resultMap id="BaseResultMap" type="com.smzdm.model.Relation" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="commodity_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="category_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <insert id="insert" parameterType="com.smzdm.model.Relation" >
    insert into relation (id, commodity_id, category_id) values (#{id,jdbcType=INTEGER}, #{commodityId,jdbcType=BIGINT}, #{categoryId,jdbcType=INTEGER})
  </insert>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, commodity_id, category_id
    from relation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, commodity_id, category_id
    from relation
  </select>


  <insert id="insertList" parameterType="list">
    insert into relation (id, commodity_id, category_id)values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.commodityId,jdbcType=BIGINT}, #{item.categoryId,jdbcType=INTEGER})
    </foreach>
  </insert>
</mapper>